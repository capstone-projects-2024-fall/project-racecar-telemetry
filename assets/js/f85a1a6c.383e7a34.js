"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[6244],{21926:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var s=n(74848),i=n(28453);const r={sidebar_position:1},o="Unit tests",c={id:"testing/unit-testing",title:"Unit tests",description:"Unit Test Guidelines",source:"@site/docs/testing/unit-testing.md",sourceDirName:"testing",slug:"/testing/unit-testing",permalink:"/project-racecar-telemetry/docs/testing/unit-testing",draft:!1,unlisted:!1,editUrl:"https://github.com/capstone-projects-2024-fall/project-racecar-telemetry/edit/main/documentation/docs/testing/unit-testing.md",tags:[],version:"current",lastUpdatedBy:"Jacky",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Test Procedures",permalink:"/project-racecar-telemetry/docs/category/test-procedures"},next:{title:"Integration tests",permalink:"/project-racecar-telemetry/docs/testing/integration-testing"}},a={},d=[{value:"Unit Test Guidelines",id:"unit-test-guidelines",level:3}];function l(e){const t={h1:"h1",h3:"h3",li:"li",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"unit-tests",children:"Unit tests"}),"\n",(0,s.jsx)(t.h3,{id:"unit-test-guidelines",children:"Unit Test Guidelines"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Important components are tested to ensure proper functionality and rendering"}),"\n",(0,s.jsx)(t.li,{children:"Components have associated tests that check whether the correct elements, components, and UI elements are rendered based on the expected input and states."}),"\n",(0,s.jsx)(t.li,{children:"Utilizing mock API calls, state management, and child components to control the input and observe how the component behaves under various conditions."}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var s=n(96540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);