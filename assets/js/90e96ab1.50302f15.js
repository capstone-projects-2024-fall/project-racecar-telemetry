"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[2418],{8243:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>o});var t=n(74848),s=n(28453);const r={},i=void 0,c={id:"system-architecture/Sequence Diagrams",title:"Sequence Diagrams",description:"Use Case 1:",source:"@site/docs/system-architecture/Sequence Diagrams.md",sourceDirName:"system-architecture",slug:"/system-architecture/Sequence Diagrams",permalink:"/project-racecar-telemetry/docs/system-architecture/Sequence Diagrams",draft:!1,unlisted:!1,editUrl:"https://github.com/capstone-projects-2024-fall/project-racecar-telemetry/edit/main/documentation/docs/system-architecture/Sequence Diagrams.md",tags:[],version:"current",lastUpdatedBy:"Arianna Reischer",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Database Design",permalink:"/project-racecar-telemetry/docs/system-architecture/Database Design"},next:{title:"API Specification",permalink:"/project-racecar-telemetry/docs/category/api-specification"}},d={},o=[{value:"Use Case 1:",id:"use-case-1",level:3},{value:"Use Case 2:",id:"use-case-2",level:3},{value:"Use Case 3:",id:"use-case-3",level:3},{value:"Use Case 4:",id:"use-case-4",level:3},{value:"Use Case 7:",id:"use-case-7",level:3},{value:"Use Case 8:",id:"use-case-8",level:3},{value:"Use Case 9:",id:"use-case-9",level:3}];function l(e){const a={em:"em",h3:"h3",mermaid:"mermaid",p:"p",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h3,{id:"use-case-1",children:"Use Case 1:"}),"\n",(0,t.jsx)(a.p,{children:(0,t.jsx)(a.em,{children:"A race crew is testing their vehicle with their driver to make sure the car is performing well."})}),"\n",(0,t.jsx)(a.mermaid,{value:"sequenceDiagram\nparticipant Driver\nparticipant Crew\n\nDriver -) Car: Driver starts car\n\nactivate Car\nactivate Temperature Sensor\nactivate ECU\nactivate Transceiver\n\nCar -) Temperature Sensor: Engine oil temperature sensor turned on\nTemperature Sensor -) ECU: Temperature data sent\nECU -) Transceiver: ECU sends data through CAN bus to Transceiver\nDriver -) MCU: Driver attaches MCU to Transceiver\n\nactivate MCU\n\nTransceiver -) MCU: Temperature data sent\nMCU -) Cloud: Data sent to cloud database and website processing\nCloud -) Crew: Crew reads live data from website\nMCU -) Cloud: Temperature warning sent\nMCU -) Driver: Temperature warning sent\nMCU -) Crew: Temperature warning sent\nCrew -) Driver: Crew communicates with driver\n\n\n\ndeactivate Car\ndeactivate Temperature Sensor\ndeactivate ECU\ndeactivate Transceiver\ndeactivate MCU"}),"\n",(0,t.jsx)(a.h3,{id:"use-case-2",children:"Use Case 2:"}),"\n",(0,t.jsx)(a.p,{children:(0,t.jsx)(a.em,{children:"A crew recently installed a new part and want to make sure the vehicle is running smoothly."})}),"\n",(0,t.jsx)(a.mermaid,{value:"sequenceDiagram\nparticipant d as driver\nparticipant cr as crew\nparticipant c as Car\nparticipant s as Sensors\nparticipant m as MCU\nparticipant cl as Cloud\n\nd -) c: Driver starts car\nactivate c\n\nc -) s: Sensored powered on\nactivate s\n\nd -) m: Driver installed MCU\nactivate m\n\ns -) m: Sensors send data to MCU\n\nm -) cl: MCU sends data wirelessly to the cloud\n\ncl -) cr: Crew pulls data from cloud database and website\n\ndeactivate m\ndeactivate s\ndeactivate c\n"}),"\n",(0,t.jsx)(a.h3,{id:"use-case-3",children:"Use Case 3:"}),"\n",(0,t.jsx)(a.p,{children:(0,t.jsx)(a.em,{children:"A driver has been testing a vehicle. As he is driving, he notices some of the electrical components in the vehicle are flickering, a sign of a problematic battery."})}),"\n",(0,t.jsx)(a.mermaid,{value:"sequenceDiagram\nparticipant d as driver\nparticipant cr as crew\nparticipant c as Car\nparticipant s as Voltage Sensor\nparticipant m as MCU\nparticipant cl as Cloud\n\nd -) c: Driver starts car\nactivate c\n\nc -) s: Sensor is turned on\nactivate s\n\nd -) m: Driver installed MCU\nactivate m\n\ns -) m: Sensors send data to MCU\n\nm -) cl: MCU sends data wirelessly to the cloud\n\ncl -) cr: Crew pulls data from cloud database and website\n\ncr -) c: Crew replaces battery\n\ndeactivate m\ndeactivate s\ndeactivate c\n"}),"\n",(0,t.jsx)(a.h3,{id:"use-case-4",children:"Use Case 4:"}),"\n",(0,t.jsx)(a.p,{children:(0,t.jsx)(a.em,{children:"A driver is getting ready for a race. It is known that tires perform better when hot."})}),"\n",(0,t.jsx)(a.mermaid,{value:"sequenceDiagram\nparticipant d as Driver\nparticipant c as Car\nparticipant t as Tire Temp Sensor\nparticipant m as MCU\nparticipant cl as Cloud\n\nd -) c: Driver starts car\nactivate c\n\nc -) t: Tire Temp Sensor powered on\nactivate t\n\nd -) m: Driver installs device\nactivate m\n\nt -) m: Sensor sends data to device\n\nm -) cl: Device sends data to cloud database/website\n\ncl -) c: Crew reads tire temperature using website\n\nc -) d: Crew relays info to driver\n\ndeactivate m\ndeactivate c\ndeactivate t\n"}),"\n",(0,t.jsx)(a.h3,{id:"use-case-7",children:"Use Case 7:"}),"\n",(0,t.jsx)(a.p,{children:(0,t.jsx)(a.em,{children:"The new TFR ergonomics lead wants to view information relevant to vehicle handling and driver performance during a run."})}),"\n",(0,t.jsx)(a.mermaid,{value:"sequenceDiagram\nactor e as Ergonomics Lead\nparticipant dash as Dashboard Home\nparticipant d as Database\n\nactor dr as Driver\nactor c as Racecar\nparticipant esp as MCU\n\n\nactivate e\ne -) dash: Click 'Insert New Display' (type: graph, sensors: [brake pressure front, brake pressure rear], unit: kPa)\ndash --) e: Show new display component\n\n\ndr -) c: Turn on car\nactivate dr\nactivate c\n\nc -) esp: Initialize\nactivate esp\n\nloop While car is running\n\n    c -) esp: Transmit sensor data(CAN ID, data, timestamp)\n\n    esp -) d: Upload data to cloud database\n    activate d\n    d -) dash: Get CAN data (CAN ID, identifier, data, timestamp)\n    dash --) e: Show displays with live data\nend\ndr -) c: Turn off car\ndeactivate c\ndeactivate esp\n\n\n\ne -) dash: Scrub to previous data(timestamp)\ndash --) e: Display data at previous timestamp\n\ne -) dr: Explain data from acceleration run\n\ndr -) c: Turn on car\nactivate c\n\nc -) esp: Initialize\nactivate esp\n\nloop While car is running\n\n    c -) esp: Transmit sensor data(CAN ID, data, timestamp)\n\n    esp -) d: Upload data to cloud database\n    d -) dash: Get CAN data (CAN ID, identifier, data, timestamp)\n\n    dash --) e: Show displays with live data\nend\ndr -) c: Turn off car\ndeactivate c\ndeactivate esp\n\n\ndeactivate d\ndeactivate dr\n\ndeactivate e\n"}),"\n",(0,t.jsx)(a.h3,{id:"use-case-8",children:"Use Case 8:"}),"\n",(0,t.jsx)(a.mermaid,{value:"sequenceDiagram\n\nactor t as TFR Member\nparticipant l as Login Page\nparticipant d as Database\nparticipant dash as Dashboard Home\n\nt -) l: Clicks Log In\nactivate t\nactivate l\n\nl --) t: Log in prompt\n\nt -) l: Username and password entered\n\nactivate d\nd -) d: Check if valid user/password\n    loop While username and password do not match\n        d--\x3et: Invalid. Enter username and pw\n    end\ndeactivate d\n\nd --) l: Successful login\n\nl -) dash: Redirect to dash board\n\ndash --) t: Display dash board home page\n\nt -) dash: Click option to pull up past data\n\ndash --) d: Request for information\n\nactivate d\nd -) dash: Pull data from previous run and display graphs.\ndeactivate d \n\n\ndash --) t: Display graph\n\nt -) dash: Click on graph to enter desired time values.\n\ndash --) t: Display graph with only desired time frame."}),"\n",(0,t.jsx)(a.h3,{id:"use-case-9",children:"Use Case 9:"}),"\n",(0,t.jsx)(a.p,{children:(0,t.jsx)(a.em,{children:"A TFR team member wants to add and delete graphs are being displayed to the dashboard."})}),"\n",(0,t.jsx)(a.mermaid,{value:"sequenceDiagram\n\nactor t as TFR Member\nparticipant l as Login Page\nparticipant d as Database\nparticipant dash as Dashboard Home\n\nl --) t: Log in prompt\n\nt -) l: Username and password entered\n\nactivate d\nd -) d: Check if valid user/password\n    loop While username and password do not match\n        d--\x3et: Invalid. Enter username and pw\n    end\ndeactivate d\n\nd --) l: Successful login\n\nl -) dash: Redirect to dash board\n\ndash --) t: Display dash board home page\n\nt -) dash: Click on graph.\n\ndash --) t: Display graph menu.\n\nt -) dash: Choose delete graph option.\n\ndash --) t: Display updates with a deleted graph.\n\nt -) dash: Click on add graph option.\n\ndash --) t: Display graph menu.\n\nt -) dash: Choose sensor-to-read value.\n\ndash -) d: Find corresponding sensor values\n\nactivate d\nd -) dash: Read data from corresponding sensor.\ndeactivate d\n\ndash --) t: Display graph for the chosen sensor to be read.\n"})]})}function p(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,a,n)=>{n.d(a,{R:()=>i,x:()=>c});var t=n(96540);const s={},r=t.createContext(s);function i(e){const a=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:a},e.children)}}}]);