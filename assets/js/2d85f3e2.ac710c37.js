"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[260],{17541:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var a=r(74848),n=r(28453);const i={},s="Cloud Database Design",o={id:"system-architecture/Cloud_DB_Design",title:"Cloud Database Design",description:"Entity Realtional Diagram:",source:"@site/docs/system-architecture/Cloud_DB_Design.md",sourceDirName:"system-architecture",slug:"/system-architecture/Cloud_DB_Design",permalink:"/project-racecar-telemetry/docs/system-architecture/Cloud_DB_Design",draft:!1,unlisted:!1,editUrl:"https://github.com/capstone-projects-2024-fall/project-racecar-telemetry/edit/main/documentation/docs/system-architecture/Cloud_DB_Design.md",tags:[],version:"current",lastUpdatedBy:"NasierF",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Version Control",permalink:"/project-racecar-telemetry/docs/system-architecture/version-control"},next:{title:"Sequence Diagrams",permalink:"/project-racecar-telemetry/docs/system-architecture/Sequence Diagrams"}},c={},l=[{value:"Entity Realtional Diagram:",id:"entity-realtional-diagram",level:2},{value:"Why Firebase?",id:"why-firebase",level:3},{value:"Why Firestore?",id:"why-firestore",level:3}];function d(e){const t={h1:"h1",h2:"h2",h3:"h3",mermaid:"mermaid",p:"p",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"cloud-database-design",children:"Cloud Database Design"}),"\n",(0,a.jsx)(t.h2,{id:"entity-realtional-diagram",children:"Entity Realtional Diagram:"}),"\n",(0,a.jsx)(t.mermaid,{value:'erDiagram\n    %%this shows the heiarchy of our Json tree in our FireBase- \n    %%real time database\n    CAN_DATA ||--o{ CAN_ID : contains\n    CAN_ID ||--o{ TIMESTAMP : records\n    TIMESTAMP ||--o{ DATA : contains\n\n    CAN_DATA {\n        string canDataRoot "Root node for CAN data"\n    }\n\n    CAN_ID {\n        string canID "CAN identifier (e.g., 200, 201)"\n    }\n\n    TIMESTAMP {\n        string timestamp "Timestamp of data collection"\n    }\n\n    DATA {\n        string data "Hexadecimal data from CAN"\n        int length "Length of data"\n    }\n\n    ESP32 ||--o{ CAN_DATA : sends'}),"\n",(0,a.jsx)(t.h3,{id:"why-firebase",children:"Why Firebase?"}),"\n",(0,a.jsx)(t.p,{children:"Firebase provides us with a real-time database which is useful for our functions. This facilitates live data streaming for retrieving data coming in the car in real time."}),"\n",(0,a.jsx)(t.h3,{id:"why-firestore",children:"Why Firestore?"}),"\n",(0,a.jsx)(t.p,{children:"Firestore allows us to access historical data for future analysis of data recorded by a car. This is also useful for us to have persisting CAN configurations for different users."})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>o});var a=r(96540);const n={},i=a.createContext(n);function s(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);