"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[116],{13536:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var i=n(74848),t=n(28453);const s={sidebar_position:3},l="General Requirements",a={id:"requirements/general-requirements",title:"General Requirements",description:"Hardware Requirements",source:"@site/docs/requirements/general-requirements.md",sourceDirName:"requirements",slug:"/requirements/general-requirements",permalink:"/project-racecar-telemetry/docs/requirements/general-requirements",draft:!1,unlisted:!1,editUrl:"https://github.com/capstone-projects-2024-fall/project-racecar-telemetry/edit/main/documentation/docs/requirements/general-requirements.md",tags:[],version:"current",lastUpdatedBy:"NasierF",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docsSidebar",previous:{title:"System Block Diagram",permalink:"/project-racecar-telemetry/docs/requirements/system-block-diagram"},next:{title:"Features and Requirements",permalink:"/project-racecar-telemetry/docs/requirements/features-and-requirements"}},c={},d=[{value:"Hardware Requirements",id:"hardware-requirements",level:2},{value:"Main Telemetry Device Hardware Components",id:"main-telemetry-device-hardware-components",level:3},{value:"Complete Hardware Requirements",id:"complete-hardware-requirements",level:3},{value:"Software Requirements",id:"software-requirements",level:2},{value:"IDE",id:"ide",level:3},{value:"Programming Languages &amp; Libraries",id:"programming-languages--libraries",level:3},{value:"Dependencies",id:"dependencies",level:3},{value:"Microcontroller Libraries",id:"microcontroller-libraries",level:3},{value:"Database",id:"database",level:3},{value:"Testing",id:"testing",level:3}];function o(e){const r={h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h1,{id:"general-requirements",children:"General Requirements"}),"\n",(0,i.jsx)(r.h2,{id:"hardware-requirements",children:"Hardware Requirements"}),"\n",(0,i.jsx)(r.h3,{id:"main-telemetry-device-hardware-components",children:"Main Telemetry Device Hardware Components"}),"\n",(0,i.jsx)(r.p,{children:"Components:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"ESP-WROOM-32 DEVKITV1: ESP microcontroller (includes CAN controller but not a CAN transceiver)"}),"\n",(0,i.jsx)(r.li,{children:"Adafruit Feather M4 CAN Express with ATSAME51"}),"\n",(0,i.jsx)(r.li,{children:"Mobile hotspot"}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"complete-hardware-requirements",children:"Complete Hardware Requirements"}),"\n",(0,i.jsx)("iframe",{src:"https://docs.google.com/spreadsheets/d/e/2PACX-1vRPmqrR1D0rSadeonzcJYDSI9_54YGbKhxfEFePVx_G_DNKT3bhswWF8M95XYecuXjWSqct2AxIOJHy/pubhtml?widget=true&headers=false",frameborder:"0",width:"100%",height:"500"}),"\n",(0,i.jsx)(r.h2,{id:"software-requirements",children:"Software Requirements"}),"\n",(0,i.jsx)(r.h3,{id:"ide",children:"IDE"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Visual Studio Code"}),"\n",(0,i.jsx)(r.li,{children:"Github Codespaces"}),"\n",(0,i.jsx)(r.li,{children:"Arduino IDE"}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"programming-languages--libraries",children:"Programming Languages & Libraries"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Next.js/Node.js:      Main frameworks for developing the web application."}),"\n",(0,i.jsx)(r.li,{children:"Firebase SDK:         For data storage and real-time database connectivity."}),"\n",(0,i.jsx)(r.li,{children:"Chart.js or Recharts: For creating graphs and charts."}),"\n",(0,i.jsx)(r.li,{children:"Socket.io:            For handling real-time data streaming if needed."}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"dependencies",children:"Dependencies"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"@dnd-kit/core@^6.1.0"}),"\n",(0,i.jsx)(r.li,{children:"@dnd-kit/sortable@^8.0.0"}),"\n",(0,i.jsx)(r.li,{children:"@emotion/react@^11.13.3"}),"\n",(0,i.jsx)(r.li,{children:"@emotion/styled@^11.13.0"}),"\n",(0,i.jsx)(r.li,{children:"@mui/icons-material@^6.1.7"}),"\n",(0,i.jsx)(r.li,{children:"@mui/material@^6.1.7"}),"\n",(0,i.jsx)(r.li,{children:"firebase@^10.14.1"}),"\n",(0,i.jsx)(r.li,{children:"next@14.2.11"}),"\n",(0,i.jsx)(r.li,{children:"plotly.js@^2.35.2"}),"\n",(0,i.jsx)(r.li,{children:"react@^18"}),"\n",(0,i.jsx)(r.li,{children:"react-dom@^18"}),"\n",(0,i.jsx)(r.li,{children:"react-plotly.js@^2.6.0"}),"\n",(0,i.jsx)(r.li,{children:"react-scripts@^5.0.1"}),"\n",(0,i.jsx)(r.li,{children:"@testing-library/jest-dom@^6.5.0"}),"\n",(0,i.jsx)(r.li,{children:"@testing-library/react@^16.0.1"}),"\n",(0,i.jsx)(r.li,{children:"@types/node@^20"}),"\n",(0,i.jsx)(r.li,{children:"@types/react@^18"}),"\n",(0,i.jsx)(r.li,{children:"@types/react-dom@^18"}),"\n",(0,i.jsx)(r.li,{children:"eslint@^8"}),"\n",(0,i.jsx)(r.li,{children:"eslint-config-next@14.2.11"}),"\n",(0,i.jsx)(r.li,{children:"jest@^29.7.0"}),"\n",(0,i.jsx)(r.li,{children:"jest-environment-jsdom@^29.7.0"}),"\n",(0,i.jsx)(r.li,{children:"postcss@^8"}),"\n",(0,i.jsx)(r.li,{children:"tailwindcss@^3.4.1"}),"\n",(0,i.jsx)(r.li,{children:"typescript@^4.9.5"}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"microcontroller-libraries",children:"Microcontroller Libraries"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Arduino Wire (2.1): facilitates serial communication between two i2c devices"}),"\n",(0,i.jsx)(r.li,{children:"Adafruit_CAN (0.2.1): enables CAN communication for Adafruit M4 Feather CAN"}),"\n",(0,i.jsx)(r.li,{children:"Arduino WiFi (1.2.7): enables WiFi communication for ESP32"}),"\n",(0,i.jsx)(r.li,{children:"Arduino HttpClient (2.2.0): facilitates communication between ESP32 and web server"}),"\n",(0,i.jsx)(r.li,{children:"ArduinoJson (2.7.1): handles JSON object creation/interpretation on ESP32"}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"database",children:"Database"}),"\n",(0,i.jsx)(r.p,{children:"Firebase: for storing telemetry data."}),"\n",(0,i.jsx)(r.h3,{id:"testing",children:"Testing"}),"\n",(0,i.jsx)(r.p,{children:"Postman: API testing."})]})}function m(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>l,x:()=>a});var i=n(96540);const t={},s=i.createContext(t);function l(e){const r=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(s.Provider,{value:r},e.children)}}}]);