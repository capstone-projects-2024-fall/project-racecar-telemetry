"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[3579],{4529:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var s=n(74848),r=n(28453);const i={sidebar_position:5},a="Use-Case Descriptions",o={id:"requirements/use-case-descriptions",title:"Use-Case Descriptions",description:"Case 0",source:"@site/docs/requirements/use-case-descriptions.md",sourceDirName:"requirements",slug:"/requirements/use-case-descriptions",permalink:"/project-racecar-telemetry/docs/requirements/use-case-descriptions",draft:!1,unlisted:!1,editUrl:"https://github.com/capstone-projects-2024-fall/project-racecar-telemetry/edit/main/documentation/docs/requirements/use-case-descriptions.md",tags:[],version:"current",lastUpdatedBy:"Nick Pelletier",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"docsSidebar",previous:{title:"Features and Requirements",permalink:"/project-racecar-telemetry/docs/requirements/features-and-requirements"},next:{title:"System Architecture",permalink:"/project-racecar-telemetry/docs/category/system-architecture"}},l={},c=[{value:"Case 0",id:"case-0",level:3},{value:"Case 1",id:"case-1",level:3},{value:"Case 2",id:"case-2",level:3},{value:"Case 3",id:"case-3",level:3},{value:"Case 4",id:"case-4",level:3},{value:"Case 5",id:"case-5",level:3}];function d(e){const t={em:"em",h1:"h1",h3:"h3",li:"li",ol:"ol",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"use-case-descriptions",children:"Use-Case Descriptions"}),"\n",(0,s.jsx)(t.h3,{id:"case-0",children:"Case 0"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"User sets up telemetry device for the first time."})}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"User plugs the telemetry device into a connector on the car\u2019s wiring harness (the connector contains pins for 12 power and ground, 5V power, CAN high and low)."}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"case-1",children:"Case 1"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"User edits ECU and webapp CAN configurations to transmit/receive data channels."})}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["User configures the vehicle's ECU to transmit relevant data over CAN IDs between 0x200-0x300. First time setup should include:","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Engine coolant temperature"}),"\n",(0,s.jsx)(t.li,{children:"Engine speed (RPM)"}),"\n",(0,s.jsx)(t.li,{children:"Battery voltage"}),"\n",(0,s.jsx)(t.li,{children:"Throttle position"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.li,{children:"User opens the telemetry webapp and opens the CAN ID configuration page from the navbar."}),"\n",(0,s.jsx)(t.li,{children:"For every data channel transmitted from the ECU, the user adds a new row to the CAN configuration table and enters how it is being transmitted (including CAN ID, offset, length in bytes, adder, multiplier, and unit)."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Note: All other use cases assume that case 0 and 1 (first time setup) has occurred."}),"\n",(0,s.jsx)(t.h3,{id:"case-2",children:"Case 2"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"User views live data on default dashboard page."})}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:['User opens the telemetry webapp, where they see a default dashboard page. It displays "Not Connected", and shows the following default displays (which are visible but empty, as no data is transmitting):',"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"A time-series graph of engine coolant temperature"}),"\n",(0,s.jsx)(t.li,{children:"A time-series graph of engine speed (RPM)"}),"\n",(0,s.jsx)(t.li,{children:"A number for battery voltage"}),"\n",(0,s.jsx)(t.li,{children:"A linear gauge for throttle position"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.li,{children:"A driver turns on the car, beginning data transmission, which causes the display to change to \u201cConnected.\u201d The display components populate with live numbers."}),"\n",(0,s.jsx)(t.li,{children:"After the car has been on for thirty seconds, the live graphs start to automatically scroll to display the new data."}),"\n",(0,s.jsx)(t.li,{children:"After the car has been on for a few minutes, the user scrubs back in time to view data from earlier in the run."}),"\n",(0,s.jsx)(t.li,{children:"The driver turns the car off. A pop-up window appears, titled \u201cLost Connection!,\u201d asking the user if they want to continue viewing the data from that run or clear the displays."}),"\n",(0,s.jsx)(t.li,{children:"User clicks \u201ccontinue viewing,\u201d and is able to scrub back in time throughout the run."}),"\n",(0,s.jsx)(t.li,{children:"The user clicks \u201cclear displays\u201d to clear the data from the past run."}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"case-3",children:"Case 3"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"User inserts new display components on default dashboard page."})}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"User configures the ECU and webapp to transmit/receive two additional data channels - Manifold Air Pressure (MAP) and Vehicle Speed - to the telemetry device over CAN."}),"\n",(0,s.jsx)(t.li,{children:"User opens the telemetry webapp to the default dashboard page (Not Connected)."}),"\n",(0,s.jsx)(t.li,{children:'User clicks the "Insert New Display" button, which brings up a menu of options to create a new dashboard display component (component editor).'}),"\n",(0,s.jsx)(t.li,{children:"User chooses options to create a radial gauge for the channel MAP, and clicks \u201cSave\u201d."}),"\n",(0,s.jsx)(t.li,{children:"The new gauge appears on the dashboard."}),"\n",(0,s.jsx)(t.li,{children:'User clicks the "Insert New Display" button again.'}),"\n",(0,s.jsx)(t.li,{children:"User chooses options to create a time-series graph of vehicle speed. They change the options to make the color of the line graph orange, and edit the vertical scale to the range 0 to 100 mph."}),"\n",(0,s.jsx)(t.li,{children:"The new time-series graph appears on the dashboard."}),"\n",(0,s.jsx)(t.li,{children:"When the page says \u201cConnected,\u201d the new graphs also populate with live data."}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"case-4",children:"Case 4"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"User edits existing components on the dashboard."})}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"User configures the ECU and webapp to transmit/receive an additional data channel, Fuel Pressure."}),"\n",(0,s.jsx)(t.li,{children:"User opens the telemetry webapp to default dashboard page (Not Connected)."}),"\n",(0,s.jsx)(t.li,{children:"User clicks the settings button on the default battery voltage display, bringing up the component editor."}),"\n",(0,s.jsx)(t.li,{children:"User changes the data channel from battery voltage to fuel pressure, and the type of graph from a number to a linear gauge."}),"\n",(0,s.jsx)(t.li,{children:"User deletes the throttle position display."}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"case-5",children:"Case 5"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"Two users view website at the same time."})}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"User 1 opens the telemetry webapp to the default dashboard (Not Connected because the car is off)."}),"\n",(0,s.jsx)(t.li,{children:"A driver turns the car on, causing User 1\u2019s page to switch to Connected."}),"\n",(0,s.jsx)(t.li,{children:"User 2 opens the telemetry webapp to the default dashboard, and sees Connected since the car is on."}),"\n",(0,s.jsx)(t.li,{children:"User 2 sees the same display as user 1 - live data as well as historical data from earlier in the run."}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var s=n(96540);const r={},i=s.createContext(r);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);