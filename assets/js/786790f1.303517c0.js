"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[6891],{50413:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>g});var t=a(74848),i=a(28453);const r={sidebar_position:1},o=void 0,d={id:"system-architecture/Webpage Design",title:"Webpage Design",description:"Dashboard Quick Reference Guide",source:"@site/docs/system-architecture/Webpage Design.md",sourceDirName:"system-architecture",slug:"/system-architecture/Webpage Design",permalink:"/project-racecar-telemetry/docs/system-architecture/Webpage Design",draft:!1,unlisted:!1,editUrl:"https://github.com/capstone-projects-2024-fall/project-racecar-telemetry/edit/main/documentation/docs/system-architecture/Webpage Design.md",tags:[],version:"current",lastUpdatedBy:"Jacky",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Design Overview",permalink:"/project-racecar-telemetry/docs/system-architecture/Design Overview"},next:{title:"Hardware Design",permalink:"/project-racecar-telemetry/docs/system-architecture/Hardware Design"}},s={},g=[{value:"Dashboard Quick Reference Guide",id:"dashboard-quick-reference-guide",level:3},{value:"Dashboard",id:"dashboard",level:3},{value:"CAN Configuration Quick Reference Guide",id:"can-configuration-quick-reference-guide",level:3},{value:"CAN Configuration",id:"can-configuration",level:3},{value:"Component Editor",id:"component-editor",level:3},{value:"Front-End UML Class Diagram",id:"front-end-uml-class-diagram",level:2}];function c(n){const e={h2:"h2",h3:"h3",img:"img",mermaid:"mermaid",p:"p",...(0,i.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h3,{id:"dashboard-quick-reference-guide",children:"Dashboard Quick Reference Guide"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"dashboardQuickstart",src:a(27396).A+"",width:"3420",height:"1810"})}),"\n",(0,t.jsx)(e.h3,{id:"dashboard",children:"Dashboard"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"dashboard",src:a(81110).A+"",width:"3420",height:"1810"})}),"\n",(0,t.jsx)(e.h3,{id:"can-configuration-quick-reference-guide",children:"CAN Configuration Quick Reference Guide"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"CANQuickstart",src:a(11598).A+"",width:"3420",height:"1810"})}),"\n",(0,t.jsx)(e.h3,{id:"can-configuration",children:"CAN Configuration"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"CANConfig",src:a(178).A+"",width:"3420",height:"1810"})}),"\n",(0,t.jsx)(e.h3,{id:"component-editor",children:"Component Editor"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"componentEditor",src:a(49399).A+"",width:"3420",height:"1810"})}),"\n",(0,t.jsx)(e.h2,{id:"front-end-uml-class-diagram",children:"Front-End UML Class Diagram"}),"\n",(0,t.jsx)(e.p,{children:"This diagram shows the different components which make up the front-end of the web app. The app is seperated into two segments, page (the dashboard) and CANConfiguration. The page component consists of the different types of graphs which are used to show data, the componentEditor which is used to edit and create the graphs, the navbar for navigation, and the instructionModal for the quick start guides. The CANConfiguration component consists of the components used to create, modify, update, and delete CAN Configurations."}),"\n",(0,t.jsx)(e.mermaid,{value:"classDiagram\nApp *-- Page\nPage *-- NavBar\nPage *-- DataGauge\nPage *-- TimeSeriesGraph\nPage *-- XYGraph\nPage *-- LinearGauge\nPage *-- DataWidget\nPage *-- InstructionsModal\nApp *-- CANConfiguration\nCANConfiguration *-- ConfigManager\nCANConfiguration *-- CANDataAssignment\nCANConfiguration *-- CANDataView\nDataGauge -- ComponentEditor\nTimeSeriesGraph -- ComponentEditor\nXYGraph -- ComponentEditor\nLinearGauge -- ComponentEditor\nDataWidget -- ComponentEditor\n\n\n\nInstructionsModal: +Boolean open\nInstructionsModal: +onClose()\nInstructionsModal: +Object children\n\n\n\n\n\nCANDataAssignment *-- CANInput\n\nDataGauge: +Number uniqueID\nDataGauge:+Number metricValue\nDataGauge:+String unit\nDataGauge:+Object storedConfig\nDataGauge:+Object initialConfig\nDataGauge:+Object config\nDataGauge:+Aray range\n\nDataGauge:+useEffect()void\nDataGauge:+fetchAndSetUnit()void\nDataGauge:+onValue()void\nDataGauge: +Array data\nDataGauge: +Array layout\nDataGauge: +setUnit(string)void\nDataGauge: +setmetricValue(Number)void\nDataGauge: +setConfig(Object)void\n\nTimeSeriesGraph: +Number uniqueID\nTimeSeriesGraph: +String unit\nTimeSeriesGraph: +Array timestamps\nTimeSeriesGraph: +Array valsToPlot\nTimeSeriesGraph: +Object config\nTimeSeriesGraph: +Object initialConfig\nTimeSeriesGraph: +Object storedConfig\n\nTimeSeriesGraph: +fetchAndSetUnit()void\nTimeSeriesGraph: +useEffect()void\nTimeSeriesGraph: +setTimestamps(Array)void\nTimeSeriesGraph: +setValsToPlot(Array)void\nTimeSeriesGraph: +setUnit(String)void\nTimeSeriesGraph: +setConfig(Object)void\n\nTimeSeriesGraph: +Array data\nTimeSeriesGraph: +Array layout\n\n\nLinearGauge: +String uniqueID\nLinearGauge: +Object config\nLinearGauge: +Object initialConfig\nLinearGauge: +Object storedConfig\nLinearGauge: +Number value\nLinearGauge: +Array range\n\nLinearGauge: +String unit\nLinearGauge: +useEffect()void\nLinearGauge: +Array data \nLinearGauge: +Object latout\nLinearGauge: +setValue(String)void\nLinearGauge: +setUnit(String)void\nLinearGauge: +setConfig(Object)void\nLinearGauge: +setRange(Array)void\nLinearGauge: +fetchAndSetUnit()void\n\n\n\n\nDataWidget: +String canID\nDataWidget: +String valueToDisplay\nDataWidget: +Int number\nDataWidget: +String title\nDataWidget: +String unit\nDataWidget: +Boolean isElapsed\nDataWidget: +String dataName\nDataWidget: +String color\nDataWidget: +String unitShown\nDataWidget: +setNumber(Int)void\nDataWidget: +setDataName(String)void\nDataWidget: +setColor(String)void\nDataWidget: +setUnitShown(String)void\nDataWidget: +handleSettingsClose()void\nDataWidget: +handleSave(object)void\n\n\n\nDataWidget: +String text\nDataWidget: +useEffect()void\n\n\nXYGraph: +Number uniqueID\nXYGraph: +String xUnit\nXYGraph: +String yUnit\nXYGraph: +Array lateral\nXYGraph: +Array longitudinal\nXYGraph: +String lineColor\nXYGraph: +String xDataName\nXYGraph: +String yDataName\nXYGraph: +Array xRange\nXYGraph: +Array yRange\n\nXYGraph: +useEffect()void\nXYGraph: +Array data\nXYGraph: +Object Layout\nXYGraph: +setLat(Array)void\nXYGraph: +setLong(Array)void\nXYGraph: +Object config\nXYGraph: +Object initialConfig\nXYGraph: +Object storedConfig\nXYGraph: +fetchAndSetUnit()void\nXYGraph: +setConfig(Object)void\nXYGraph: +setXUnit(String)void\nXYGraph: +setYUnit(String)void\nXYGraph: +setLat(String)void\nXYGraph: +setLong(String)void\nXYGraph: +setLineColor(String)void\nXYGraph: +setXDataName(String)void\nXYGraph: +setYDataName(String)void\nXYGraph: +setXRange(Array)void\nXYGraph: +setYRange(Array)void\n\n\nNavBar: +Bool isConnected\n\nPage:+Array rows\nPage:+Array error\nPage:+Array rowHeights\nPage:+Boolean editorOpen\nPage:+Object currentEdit\nPage:+Object groupedDataChannels\nPage:+Boolean open\nPage:+Array defaultGraphs\nPage:+Array defaultRows\n\nPage:+useEffect()void\nPage:+handleClose()void\nPage:+handleAddRow()void\nPage:+adjustRowHeight(Number, Number)void\nPage:+handleOpenEditor(Number, Number)void\nPage:+handleSaveComponent(Object)void\nPage:+handleRemovePlaceholder(Number, Number)void\nPage:+handleRemoveRow(Number)void\nPage:+renderGraph(Object)ReactNode\n\n\n\n\nComponentEditor: +Object componentConfigs\nComponentEditor: +String componentType\nComponentEditor: +Object formState\nComponentEditor: +Object errors\nComponentEditor: +String selectedCanID\nComponentEditor: +Array dataChannels\nComponentEditor: +Array xDataChannels\nComponentEditor: +Array yDataChannels\n\nComponentEditor: +setComponentType(String)void\nComponentEditor: +setFormState(Object)void\nComponentEditor: +setErrors(Object)void\nComponentEditor: +setSelectedCanID(String)void\nComponentEditor: +setDataChannels(Array)void\nComponentEditor: +setxDataChannels(Array)void\nComponentEditor: +setyDataChannels(Array)void\nComponentEditor: +useEffect()void\nComponentEditor: +handleTypeChange(String)void\nComponentEditor: +handleChange(Object)void\nComponentEditor: +handleCanIDChange(String, String)void\nComponentEditor: +handleSubmit()void\n\n\n\n\n\n\n\n\n\n\n\nCANDataAssignment: +Array rows\nCANDataAssignment: +setRows(Array)void\nCANDataAssignment: +Boolean loading\nCANDataAssignment: +String error\nCANDataAssignment: +Object notification\n\nCANDataAssignment: +setLoading(Boolean)void\nCANDataAssignment: +setError(String)void\nCANDataAssignment: +setNotification(Object)void\nCANDataAssignment: +loadExistingData()void\nCANDataAssignment: +fetchCANDATA(Object)void\nCANDataAssignment: +handleAddRow()void\nCANDataAssignment: +handleRowChange(String, Object)void\nCANDataAssignment: +handleDeleteRow(String)void\nCANDataAssignment: +showNotification(String, String)void\nCANDataAssignment: +handleSubmit()void\n\nCANDataView: +configData(String)\nCANDataView: +setConfigData(String)void\nCANDataView: +modalOpen(Boolean)\nCANDataView: +setModalOpen(Boolean)void\nCANDataView: +selectedCanId(String)\nCANDataView: +setSelectedCanId(String)void\nCANDataView: +signals(Array)\nCANDataView: +setSignals(Array)void\nCANDataView: +useEffect()void\nCANDataView: +handleViewClick(String, Array)void\n\n\n\n\n\n\n\n\n\n\n\n\nCANDataAssignment: +handleAddRow(Array)void\nCANDataAssignment: +handleRowChange(int, Object)void\nCANDataAssignment: +handleSubmit()void\nCANDataAssignment: +handleCancel()void\n\nCANInput: +Boolean modalOpen\nCANInput: +setModalOpen(boolean)void\nCANInput: +Array signals\nCANInput: +setSignals(array)void\nCANInput: +useEffect()void\nCANInput: +fetchSignals()void\nCANInput: +handleInputChange(String, String)void\nCANInput: +handleModalSubmit()void\nCANInput: +handleSignalChange(String, String, String)void\n\n\n\n\n\n\nCANInput: +Object row\nCANInput: +onRowChange(Object)void\nCANInput: +handleInputChange(String, Int)void\n\nConfigManager: +Array configs\nConfigManager: +setConfigs(array)void\nConfigManager: +String selectedConfig\nConfigManager: +setSelectedConfig(array)void\nConfigManager: +Object configData\nConfigManager: +setConfigData(Object)void\nConfigManager: +String errorMessage\nConfigManager: +Object filteredConfigs\n\nConfigManager: +setErrorMessage(String)void\n\n\nConfigManager: +fetchConfigs(String)Object\nConfigManager: +useEffect()void\nConfigManager: +selectConfig(Number)void\nConfigManager: +handleCreateConfig()void\nConfigManager: +handleDeleteConfig(Number)void\n\n\nCANConfiguration: +String selectedConfig\nCANConfiguration: +Boolean isEditing\n\nCANConfiguration: +setSelectedConfig(String)void\nCANConfiguration: +setIsEditing(Boolean)void\nCANConfiguration: +useEffect()void\nCANConfiguration: +handleClose()void\n\n\n\n"})]})}function u(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(c,{...n})}):c(n)}},11598:(n,e,a)=>{a.d(e,{A:()=>t});const t=a.p+"assets/images/CAN_quickstart-c76aa1a4f7f359b0f9f816b31c02f1d4.png"},49399:(n,e,a)=>{a.d(e,{A:()=>t});const t=a.p+"assets/images/component_editor-7ad99306438e0bc714bb1a8226a59aa1.png"},178:(n,e,a)=>{a.d(e,{A:()=>t});const t=a.p+"assets/images/config_manager-42418dc42125db13f3d03cf9af0517c0.png"},81110:(n,e,a)=>{a.d(e,{A:()=>t});const t=a.p+"assets/images/dashboard-b642d97f8aec8b9fbc8195e3d5e7f927.png"},27396:(n,e,a)=>{a.d(e,{A:()=>t});const t=a.p+"assets/images/dashboard_quickstart-8e315287269d0d99fdfc5cb04395807b.png"},28453:(n,e,a)=>{a.d(e,{R:()=>o,x:()=>d});var t=a(96540);const i={},r=t.createContext(i);function o(n){const e=t.useContext(r);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:o(n.components),t.createElement(r.Provider,{value:e},n.children)}}}]);